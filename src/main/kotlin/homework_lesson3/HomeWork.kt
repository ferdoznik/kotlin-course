package homework_lesson3

class HomeWork {
    // 1. Название мероприятия (публичная переменная, известна заранее)
    val eventName: String = "Monster Hackathon"

    // 2. Дата проведения (публичная переменная, может переноситься; запрещаем пустые значения)
    var eventDate: String = "13 ноября 2025"

    // 3. Место проведения (публичная переменная, может уточняться)
    var venue: String = "Технопарк, зал A"

    // 4. Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы. (приватная переменная)
    private val internalDetailedBudget: String =
        "Подробная разбивка по поставщикам и суммам (для внутреннего пользования)"

    // 5. Количество участников (публичная переменная с защитой от внешней записи)
    var participantsCount: Int = 0

    // 6. Длительность хакатона (публичная переменная, как строка формата 'X часов')
    var hackathonDuration: String = "6 часов"

    // 7. Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг. (приватная переменная)
    private val vendorsContactsAndTerms: String =
        "Контакты и условия договоров с поставщиками (конфиденциально)"

    // 8. Текущее состояние хакатона (статус) (публичная переменная)
    var status: String = "Планируется"

    // 9. Список спонсоров (приватная переменная)
    private var sponsors: String = "Goggle; Meta; Apple"

    // 10. Бюджет мероприятия (публичная переменная)
    var publicBudgetSummary: String = "Общий бюджет и категории расходов (без деталей)"

    // 11. Текущий уровень доступа к интернету (публичная переменная)
    var internetAccessLevel: String = "Публичный"

    // 12. Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки. (приватная переменная)
    private var opsLogisticsPlan: String = "Маршруты, расписания, ответственные"

    // 13. Количество команд (публичная переменная)
    var teamsCount: Int = 0
        set(value) {
            if (value >= 0) field = value
        }

    // 14. Перечень задач (приватная переменная — внутренний бэклог)
    private var tasksBacklog: String = "Список задач с приоритетами"

    // 15. План эвакуации (публичная переменная; должен быть доступен всем)
    val evacuationPlan: String = "Схемы выходов, точки сбора, инструкции"

    // 16. Список доступного оборудования (публичная переменная)
    var allocatedEquipment: String = "Ноутбуки; Проекторы; Удлинители"

    // 17. Список свободного оборудования (публичная переменная)
    var availableEquipment: String = "Мониторы; USB-кабели"

    // 18. График питания участников (зависит от выбранного за неделю до начала поставщика) (публичная переменная с отложенной инициализацией)
    lateinit var mealSchedule: String

    // 19. План мероприятий на случай сбоев (приватная переменная — только внутренняя команда)
    private val contingencyPlan: String = "Процедуры на случай отказов и сбоев"

    // 20. Список экспертов и жюри (публичная переменная)
    val judgesAndExperts: String = "Tonny Stark; Jane Doe; Dr. Who"

    // 21. Политика конфиденциальности (публичная переменная)
    val privacyPolicy: String = "Политика обработки данных и приватности"

    // 22. Приватные отзывы (фидбэк) участников и зрителей для анализа проблем. (приватная переменная)
    private var privateFeedback: String = "Сырые отзывы для внутреннего анализа"

    // 23. Текущая температура в помещении (приватная переменная, телеметрия)
    private var roomTemperature: String = "22°C"

    // 24. Данные мониторинга и анализ производительности сетевого оборудования и интернет-соединения для целей отладки своих приложений командами (приватная переменная)
    private var networkPerfAnalytics: String = "Графики, логи, метрики"

    // 25. Регулятор скорости интернета (понижающий коэффициент, например 0.5) (приватная переменная)
    private var internetThrottleFactor: Int = 1
        set(value) {
            if (value >= 0) field = value
        }

    // 26. Уровень освещения (приватная переменная, телеметрия: 'ярко', 'нормально', 'тускло')
    private var lightingLevel: String = "нормально"

    // 27. Лог событий мероприятия (приватная «тяжёлая» лениво инициализируемая переменная)
    private val eventLog: String by lazy { "Инициализация отложенной загрузки лога событий" }

    // 28. Возможность получения медицинской помощи прямо на мероприятии (да/нет) (публичная переменная)
    val isMedicalSupportAvailable: Boolean = true

    // 29. Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций. (приватная переменная)
    private val safetyAndSecurityProcedures: String =
        "Протоколы безопасности, инструкции по ЧС, роли и контакты"

    // 30. Регистрационный номер мероприятия (публичная переменная)
    val registrationNumber: Int = 404

    // 31. Максимально допустимый уровень шума в помещении хакатона (публичная переменная, Int — явное число)
    val maxNoiseLevelDb: Int = 75

    // 32. Индикатор превышения уровня шума в помещениях (публичная переменная с private set; обновляется системой мониторинга)
    var isNoiseExceeded: Boolean = false

    // 33. План взаимодействия с прессой (публичная переменная; внешне видимый документ)
    var pressPlan: String = "Контакты СМИ, слоты интервью, пресс-релиз"

    // 34. Детальная публичная информация о проектах каждой команды, сбор данных включает компиляцию кода и статистику прогонов автопроверок. (публичная «тяжёлая» лениво инициализируемая переменная)
    val publicProjectsDetails: String by lazy { "Сводка проектов, результаты сборок и автотестов" }

    // 35. Статус получения всех необходимых разрешений для проведения мероприятия (приватная переменная)
    private var permitsStatus: String = "В процессе"

    // 36. Индикатор доступности специализированного оборудования в данный момент (публичная переменная)
    var isSpecialEquipmentAvailable: Boolean = true

    // 37. Список партнеров мероприятия (публичная переменная с private set)
    var partners: String = "TechFund; CloudX"

    // 38. Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия. (публичная переменная с отложенной инициализацией)
    val postEventReport: String by lazy {
        ""
    }

    // 39. Внутренние правила распределения призов (приватная переменная)
    private val internalPrizeRules: String = "Регламент начисления и распределения призов"

    // 40. Список разыгрываемых призов (публичная переменная с private set)
    var prizesList: String = "Ноутбук; Сертификаты; Подписки"

    // 41. Контактная информация экстренных служб, медицинского персонала и других важных служб, для внутреннего пользования. (приватная переменная)
    private val emergencyContactsInternal: String =
        "Экстренные номера, медперсонал, координаторы (для внутреннего пользования)"

    // 42. Особые условия для участников с ограниченными возможностями (публичная переменная)
    val accessibilityArrangements: String =
        "Пандусы, доступные WC, зарезервированные места, ассистивные сервисы"

    // 43. Общее настроение участников (определяется опросами)
    var participantsMood: String = ""

    // 44. Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия. (приватная переменная с отложенной инициализацией)
    private lateinit var detailedRunOfShow: String

    // 45. Имя знаменитого специального гостя, объявляется за день до мероприятия (публичная переменная с отложенной инициализацией)
    lateinit var specialGuestName: String

    // 46. Максимальное количество людей, которое может вместить место проведения (публичная переменная, Int — явное число)
    val venueCapacity: Int = 500

    // 47. Количество часов, отведенное каждой команде для работы над проектом (публичная переменная, Int — явное число)
    val hoursPerTeam: Int = 48

}